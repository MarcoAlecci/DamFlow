{'source': '<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>', 'sink': '<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<p0.a$b: double readDouble()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<android.view.View: android.os.Parcelable onSaveInstanceState()>', 'sink': '<photo.blender.mix.up.lovephotoblender.overlay.photo.editor.blend.me.free.apps.C854574587454: void setResult(int,android.content.Intent)>'}
{'source': '<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>'}
{'source': '<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>', 'sink': '<android.util.Log: int e(java.lang.String,java.lang.String)>'}
{'source': '<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>', 'sink': '<com.tookancustomer.RegistrationOnboardingActivity: void setResult(int,android.content.Intent)>'}
{'source': '<e83$b: int readInt()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String)>'}
{'source': '<e1.a$b: float readFloat()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: boolean isDone()>', 'sink': '<android.app.Activity: void startActivity(android.content.Intent)>'}
{'source': '<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<com.tuyasmart.stencil.base.activity.b: void startActivity(android.content.Intent)>'}
{'source': '<b.h.a.a$b: short readShort()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<ams.moveandpaymodule.widget.a: int getCount()>', 'sink': '<android.content.Context: void sendBroadcast(android.content.Intent)>'}
{'source': '<b.l.a.a$b: int readUnsignedShort()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String)>'}
{'source': '<com.pixsterstudio.exercise_app.activites.RecommendedMoreActivity: android.content.Intent getIntent()>', 'sink': '<com.pixsterstudio.exercise_app.activites.RecommendedMoreActivity: void setResult(int,android.content.Intent)>'}
{'source': '<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>', 'sink': '<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<java.net.HttpURLConnection: int getResponseCode()>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<com.onesignal.influence.domain.OSInfluenceChannel: java.lang.String toString()>', 'sink': '<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>', 'sink': '<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>'}
{'source': '<com.p1.chompsms.activities.About: java.lang.Object onRetainNonConfigurationInstance()>', 'sink': '<com.p1.chompsms.activities.themesettings.CustomizeConversationList: void setResult(int,android.content.Intent)>'}
{'source': '<android.content.Context: android.content.res.Resources getResources()>', 'sink': '<ams.moveandpaymodule.mg.InsertPassCodeActivity: void setResult(int,android.content.Intent)>'}
{'source': '<com.mypackage.channele.weathere.casta.activities.a: boolean onKeyDown(int,android.view.KeyEvent)>', 'sink': '<androidx.e.a.e: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<java.util.HashMap: java.util.Set entrySet()>', 'sink': '<aplicacion.tiempo.OpcionesActivity: void setResult(int,android.content.Intent)>'}
{'source': '<a1.b$b: short readShort()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String)>'}
{'source': '<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.content.Context: void startActivity(android.content.Intent)>'}
{'source': '<java.io.File: boolean mkdirs()>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<com.graph.weather.forecast.channel.activities.SettingActivity: android.content.Intent getIntent()>', 'sink': '<android.content.Context: void sendBroadcast(android.content.Intent)>'}
{'source': '<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<android.view.View: int getHeight()>', 'sink': '<n30: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<b4.a$b: int readInt()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<java.lang.Class: java.lang.String getCanonicalName()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<com.p1.chompsms.activities.BasePreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>', 'sink': '<com.p1.chompsms.activities.themesettings.CustomizeConversation: void setResult(int,android.content.Intent)>'}
{'source': '<com.google.android.gms.common.api.Status: java.lang.String toString()>', 'sink': '<android.util.Log: int e(java.lang.String,java.lang.String)>'}
{'source': '<k3.a$b: byte readByte()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String)>'}
{'source': '<java.io.InputStream: int available()>', 'sink': '<com.takeaway.android.activity.RestaurantListActivity: void setResult(int,android.content.Intent)>'}
{'source': '<homeworkout.homeworkouts.noequipment.ReplaceExerciseActivity: android.content.Intent getIntent()>', 'sink': '<homeworkout.homeworkouts.noequipment.ReplaceExerciseActivity: void setResult(int,android.content.Intent)>'}
{'source': '<java.lang.Class: java.lang.String getCanonicalName()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<android.support.v7.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()>', 'sink': '<com.appgenix.bizcal.appwidgets.configuration.WidgetConfigureActivity: void setResult(int,android.content.Intent)>'}
{'source': '<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>', 'sink': '<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>'}
{'source': '<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.content.Context: void startActivity(android.content.Intent)>'}
{'source': '<java.lang.String: int length()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)>', 'sink': '<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>'}
{'source': '<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>', 'sink': '<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<com.amazonaws.mobileconnectors.cognitoauth.activities.CustomTabsManagerActivity: android.content.Intent getIntent()>', 'sink': '<com.amazonaws.mobileconnectors.cognitoauth.activities.CustomTabsManagerActivity: void setResult(int,android.content.Intent)>'}
{'source': '<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.app.Activity: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<java.lang.Class: java.lang.String getCanonicalName()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<java.util.HashMap: java.lang.Object get(java.lang.Object)>', 'sink': '<aplicacion.tiempo.OpcionesActivity: void setResult(int,android.content.Intent)>'}
{'source': '<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.app.Activity: void startActivity(android.content.Intent)>'}
{'source': '<w0.a$b: short readShort()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>', 'sink': '<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>', 'sink': '<n30: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<com.appgenix.bizcal.reminder.ongoingnotification.OngoingNotificationMeetingResponseActivity: android.content.Intent getIntent()>', 'sink': '<android.content.Context: void startActivity(android.content.Intent)>'}
{'source': '<android.content.res.Resources: android.content.res.Configuration getConfiguration()>', 'sink': '<android.app.Activity: void startActivity(android.content.Intent)>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.util.Log: int e(java.lang.String,java.lang.String)>'}
{'source': '<java.lang.String: int length()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<java.util.ArrayList: int size()>', 'sink': '<n30: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<android.location.Location: double getLongitude()>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<com.banggood.client.fragment.activity.account.AccountSettingActivity: android.content.Intent getIntent()>', 'sink': '<com.banggood.client.main.HeaderBaseActivity: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>', 'sink': '<android.util.Log: int v(java.lang.String,java.lang.String)>'}
{'source': '<android.app.PendingIntent: android.content.IntentSender getIntentSender()>', 'sink': '<androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>'}
{'source': '<java.lang.System: long currentTimeMillis()>', 'sink': '<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>'}
{'source': '<pub.devrel.easypermissions.AppSettingsDialogHolderActivity: android.content.Intent getIntent()>', 'sink': '<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<d1.p: java.util.Iterator iterator()>', 'sink': '<android.app.Activity: void setResult(int,android.content.Intent)>'}
{'source': '<java.net.HttpURLConnection: int getResponseCode()>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>'}
{'source': '<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>', 'sink': '<android.util.Log: int v(java.lang.String,java.lang.String)>'}
{'source': '<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<dxb: void startActivity(android.content.Intent)>'}
{'source': '<y0.a$b: int readInt()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String)>'}
{'source': '<pub.devrel.easypermissions.AppSettingsDialogHolderActivity: android.content.Intent getIntent()>', 'sink': '<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<com.google.android.gms.internal.ads.fd: java.lang.String toString()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<android.os.BaseBundle: java.lang.Object get(java.lang.String)>', 'sink': '<n30: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<b.m.a.a$a: int readInt()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>', 'sink': '<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>'}
{'source': '<o0.d$b: byte readByte()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String)>'}
{'source': '<java.lang.String: int length()>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<java.nio.ByteBuffer: byte get()>', 'sink': '<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()>', 'sink': '<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>'}
{'source': '<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>', 'sink': '<com.elfi.intesasanpaolo.android.latuabanca.ui.activities._ext.a: void startActivity(android.content.Intent)>'}
{'source': '<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>', 'sink': '<com.sonicomobile.itranslate.app.activities.VoiceRecordingActivity: void setResult(int,android.content.Intent)>'}
{'source': '<io.fabric.sdk.android.services.concurrency.internal.AbstractFuture: boolean isDone()>', 'sink': '<android.content.Context: void startActivity(android.content.Intent)>'}
{'source': '<java.lang.String: int length()>', 'sink': '<java.net.URL: java.net.URLConnection openConnection()>'}
{'source': '<java.lang.String: int length()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>'}
{'source': '<o0.d$b: short readShort()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<java.io.RandomAccessFile: long length()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>'}
{'source': '<b.h.a.a$b: double readDouble()>', 'sink': '<android.util.Log: int w(java.lang.String,java.lang.String)>'}
{'source': '<androidx.appcompat.app.e: android.view.MenuInflater getMenuInflater()>', 'sink': '<androidx.e.a.e: void startActivityForResult(android.content.Intent,int)>'}
{'source': '<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>', 'sink': '<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>'}